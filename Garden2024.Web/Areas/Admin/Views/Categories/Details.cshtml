@model CategoryDetailsVm
@using X.PagedList
@using X.Web.PagedList

<div>
    <h4>Category's Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            <label asp-for="CategoryName"></label>
        </dt>
        <dd class="col-sm-4">
            <input asp-for="CategoryName" class="form-control form-control-sm" readonly />
        </dd>
        <dt class="col-sm-2">
            <label asp-for="Description"></label>
        </dt>
        <dd class="col-sm-4">
            <input asp-for="Description" class="form-control form-control-sm" readonly />
        </dd>
        <dt class="col-sm-2">
            <label asp-for="ProductsQuantity"></label>
        </dt>
        <dd class="col-sm-4">
            <input asp-for="ProductsQuantity" class="form-control form-control-sm" readonly />
        </dd>
    </dl>
</div>
<div>
    <a class="btn btn-warning btn-sm" asp-controller="Categories" asp-action="UpSert" asp-route-id="@Model.CategoryId">
        <i class="bi bi-pencil-square"></i>&nbsp;
        Edit
    </a>
    <a asp-action="Index" class="btn btn-success btn-sm">
        <i class="bi bi-backspace"></i>&nbsp;
        Back to List
    </a>
</div>
<partial name="_ProductList" model="@Model.Products" />
<div class="d-flex">
    @Html.PagedListPager(Model.Products, page => Url.Action("Details",
    new { page ,
    }), new PagedListRenderOptions
{
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    DisplayLinkToIndividualPages = true,
    DisplayPageCountAndCurrentLocation = false,
    MaximumPageNumbersToDisplay = 10
})
</div>
